{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageBoard() {\n  _s();\n\n  function createMessage(state) {\n    let message = \"\";\n\n    if (state.invalidWordLength) {\n      message = \"Invalid Word Length\";\n    }\n\n    let curGuess = state.history[state.history.length - 1].toUpperCase();\n\n    if (state.word === curGuess) {\n      message = \"Congratulations!  Would you like to try again?\";\n    }\n\n    let lastGuess = state.history[state.history.length - 1].toUpperCase();\n\n    if (curWord === lastGuess) {\n      console.log(\"in if\");\n      message = \"congrats\";\n    }\n\n    return message;\n  }\n\n  const currentMessage = useSelector(createMessage, shallowEqual);\n\n  function getAttemptsRemaining(state) {\n    let attempts = \"\";\n\n    if (state.attemptsRemaining > 0) {\n      attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n    }\n\n    return attempts;\n  }\n\n  const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual); // function score(state) {\n  //     let lastGuess = state.history.pop();\n  //     if (state.word === lastGuess) {\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Message Board: \", currentMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: attemptsRemaining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessageBoard, \"MYxs2UNtM0hveng/0cBtKf8Embg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MessageBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"sources":["/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx"],"names":["React","shallowEqual","useSelector","MessageBoard","createMessage","state","message","invalidWordLength","curGuess","history","length","toUpperCase","word","lastGuess","curWord","console","log","currentMessage","getAttemptsRemaining","attempts","attemptsRemaining"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAO,oBAAP;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAGnC,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,OAAO,GAAG,EAAd;;AAEA,QAAID,KAAK,CAACE,iBAAV,EAA6B;AACzBD,MAAAA,OAAO,GAAG,qBAAV;AACH;;AAED,QAAIE,QAAQ,GAAGH,KAAK,CAACI,OAAN,CAAcJ,KAAK,CAACI,OAAN,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,WAAxC,EAAf;;AACA,QAAIN,KAAK,CAACO,IAAN,KAAeJ,QAAnB,EAA6B;AACzBF,MAAAA,OAAO,GAAG,gDAAV;AACH;;AAED,QAAIO,SAAS,GAAGR,KAAK,CAACI,OAAN,CAAcJ,KAAK,CAACI,OAAN,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,WAAxC,EAAhB;;AACA,QAAIG,OAAO,KAAID,SAAf,EAA0B;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAV,MAAAA,OAAO,GAAG,UAAV;AACH;;AAGD,WAAOA,OAAP;AACH;;AAGD,QAAMW,cAAc,GAAGf,WAAW,CAACE,aAAD,EAAgBH,YAAhB,CAAlC;;AAEA,WAASiB,oBAAT,CAA8Bb,KAA9B,EAAqC;AACjC,QAAIc,QAAQ,GAAG,EAAf;;AAEA,QAAId,KAAK,CAACe,iBAAN,GAA0B,CAA9B,EAAiC;AAC7BD,MAAAA,QAAQ,GAAI,uBAAsBd,KAAK,CAACe,iBAAkB,EAA1D;AACH;;AACD,WAAOD,QAAP;AACH;;AAED,QAAMC,iBAAiB,GAAGlB,WAAW,CAACgB,oBAAD,EAAuBjB,YAAvB,CAArC,CArCmC,CAwCnC;AACA;AACA;AAEA;AACA;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA,oCAAoBgB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvDuBjB,Y;UA0BGD,W,EAWGA,W;;;KArCNC,Y","sourcesContent":["import React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\n\n\nexport default function MessageBoard() {\n    \n\n    function createMessage(state) {\n        let message = \"\";\n\n        if (state.invalidWordLength) {\n            message = \"Invalid Word Length\";\n        }\n\n        let curGuess = state.history[state.history.length - 1].toUpperCase();\n        if (state.word === curGuess) {\n            message = \"Congratulations!  Would you like to try again?\";\n        }\n\n        let lastGuess = state.history[state.history.length - 1].toUpperCase();\n        if (curWord=== lastGuess) {\n            console.log(\"in if\");\n            message = \"congrats\";\n        }\n\n       \n        return message;\n    } \n    \n    \n    const currentMessage = useSelector(createMessage, shallowEqual);\n\n    function getAttemptsRemaining(state) {\n        let attempts = \"\";\n\n        if (state.attemptsRemaining > 0) {\n            attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n        }\n        return attempts;\n    }\n\n    const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual);\n\n\n    // function score(state) {\n    //     let lastGuess = state.history.pop();\n    //     if (state.word === lastGuess) {\n\n    //     }\n    // }\n\n\n    return(\n        <div className='text-container'> \n            <h2>Message Board: {currentMessage}</h2>\n            <h3>{attemptsRemaining}</h3>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}