{"ast":null,"code":"var _jsxFileName = \"/Users/madeleinevanzuylen/Desktop/WebDev_project2/src/component/MessageBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageBoard() {\n  _s();\n\n  function createMessage(state) {\n    let message = \"\";\n\n    if (state.invalidWordLength) {\n      message = \"Invalid Word Length\";\n    }\n\n    if (state.invalidWord) {\n      message = \"Word not in dictionary\";\n    }\n\n    let curGuess = state.history[state.history.length - 1];\n\n    if (curGuess !== undefined) {\n      if (state.word === curGuess.toUpperCase()) {\n        message = \"Congratulations!  Would you like to try again?\";\n      } else if (state.attemptsRemaining === 0 && state.word !== curGuess.toUpperCase()) {\n        message = \"You failed to guess the word. End of Game.\";\n      }\n    }\n\n    return message;\n  }\n\n  const currentMessage = useSelector(createMessage, shallowEqual);\n\n  function getAttemptsRemaining(state) {\n    let attempts = \"\";\n\n    if (state.attemptsRemaining > 0) {\n      attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n    }\n\n    return attempts;\n  }\n\n  const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Message Board: \", currentMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: attemptsRemaining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessageBoard, \"MYxs2UNtM0hveng/0cBtKf8Embg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MessageBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"sources":["/Users/madeleinevanzuylen/Desktop/WebDev_project2/src/component/MessageBoard.jsx"],"names":["React","shallowEqual","useSelector","MessageBoard","createMessage","state","message","invalidWordLength","invalidWord","curGuess","history","length","undefined","word","toUpperCase","attemptsRemaining","currentMessage","getAttemptsRemaining","attempts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAO,oBAAP;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAGnC,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,OAAO,GAAG,EAAd;;AAEA,QAAID,KAAK,CAACE,iBAAV,EAA6B;AACzBD,MAAAA,OAAO,GAAG,qBAAV;AACH;;AACD,QAAID,KAAK,CAACG,WAAV,EAAsB;AAClBF,MAAAA,OAAO,GAAG,wBAAV;AACH;;AAED,QAAIG,QAAQ,GAAGJ,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACK,OAAN,CAAcC,MAAd,GAAuB,CAArC,CAAf;;AAEA,QAAIF,QAAQ,KAAKG,SAAjB,EAA4B;AACxB,UAAIP,KAAK,CAACQ,IAAN,KAAeJ,QAAQ,CAACK,WAAT,EAAnB,EAA2C;AACvCR,QAAAA,OAAO,GAAG,gDAAV;AACH,OAFD,MAEO,IAAID,KAAK,CAACU,iBAAN,KAA4B,CAA5B,IAAiCV,KAAK,CAACQ,IAAN,KAAeJ,QAAQ,CAACK,WAAT,EAApD,EAA4E;AAC/ER,QAAAA,OAAO,GAAG,4CAAV;AACH;AACJ;;AAED,WAAOA,OAAP;AACH;;AAGD,QAAMU,cAAc,GAAGd,WAAW,CAACE,aAAD,EAAgBH,YAAhB,CAAlC;;AAEA,WAASgB,oBAAT,CAA8BZ,KAA9B,EAAqC;AACjC,QAAIa,QAAQ,GAAG,EAAf;;AAEA,QAAIb,KAAK,CAACU,iBAAN,GAA0B,CAA9B,EAAiC;AAC7BG,MAAAA,QAAQ,GAAI,uBAAsBb,KAAK,CAACU,iBAAkB,EAA1D;AACH;;AACD,WAAOG,QAAP;AACH;;AAED,QAAMH,iBAAiB,GAAGb,WAAW,CAACe,oBAAD,EAAuBhB,YAAvB,CAArC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA,oCAAoBe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/CuBZ,Y;UA2BGD,W,EAWGA,W;;;KAtCNC,Y","sourcesContent":["import React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\n\n\nexport default function MessageBoard() {\n    \n\n    function createMessage(state) {\n        let message = \"\";\n\n        if (state.invalidWordLength) {\n            message = \"Invalid Word Length\";\n        }\n        if (state.invalidWord){\n            message = \"Word not in dictionary\";\n        }\n        \n        let curGuess = state.history[state.history.length - 1];\n\n        if (curGuess !== undefined) {\n            if (state.word === curGuess.toUpperCase()) {\n                message = \"Congratulations!  Would you like to try again?\";\n            } else if (state.attemptsRemaining === 0 && state.word !== curGuess.toUpperCase()) {\n                message = \"You failed to guess the word. End of Game.\";\n            }\n        }\n       \n        return message;\n    } \n    \n    \n    const currentMessage = useSelector(createMessage, shallowEqual);\n\n    function getAttemptsRemaining(state) {\n        let attempts = \"\";\n\n        if (state.attemptsRemaining > 0) {\n            attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n        }\n        return attempts;\n    }\n\n    const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual);\n\n    return(\n        <div className='text-container'> \n            <h2>Message Board: {currentMessage}</h2>\n            <h3>{attemptsRemaining}</h3>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}