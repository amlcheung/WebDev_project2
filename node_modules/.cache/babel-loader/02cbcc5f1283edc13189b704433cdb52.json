{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageBoard() {\n  _s();\n\n  function createMessage(state) {\n    let message = \"\";\n\n    if (state.invalidWordLength) {\n      message = \"Invalid Word Length\";\n    }\n\n    let lastGuess = state.history.pop();\n    console.log(\"lastGUess\" + lastGuess);\n\n    if (state.word === lastGuess) {\n      message = \"congrats\";\n    }\n\n    return message;\n  }\n\n  const currentMessage = useSelector(createMessage, shallowEqual);\n\n  function getAttemptsRemaining(state) {\n    let attempts = \"\";\n\n    if (state.attemptsRemaining > 0) {\n      attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n    }\n\n    return attempts;\n  }\n\n  const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual); // function score(state) {\n  //     let lastGuess = state.history.pop();\n  //     if (state.word === lastGuess) {\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Message Board: \", currentMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: attemptsRemaining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessageBoard, \"MYxs2UNtM0hveng/0cBtKf8Embg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MessageBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"sources":["/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx"],"names":["React","shallowEqual","useSelector","MessageBoard","createMessage","state","message","invalidWordLength","lastGuess","history","pop","console","log","word","currentMessage","getAttemptsRemaining","attempts","attemptsRemaining"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAO,oBAAP;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAGnC,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,OAAO,GAAG,EAAd;;AAEA,QAAID,KAAK,CAACE,iBAAV,EAA6B;AACzBD,MAAAA,OAAO,GAAG,qBAAV;AACH;;AAED,QAAIE,SAAS,GAAGH,KAAK,CAACI,OAAN,CAAcC,GAAd,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,SAA1B;;AACA,QAAIH,KAAK,CAACQ,IAAN,KAAeL,SAAnB,EAA8B;AAC1BF,MAAAA,OAAO,GAAG,UAAV;AACH;;AAGD,WAAOA,OAAP;AACH;;AAGD,QAAMQ,cAAc,GAAGZ,WAAW,CAACE,aAAD,EAAgBH,YAAhB,CAAlC;;AAEA,WAASc,oBAAT,CAA8BV,KAA9B,EAAqC;AACjC,QAAIW,QAAQ,GAAG,EAAf;;AAEA,QAAIX,KAAK,CAACY,iBAAN,GAA0B,CAA9B,EAAiC;AAC7BD,MAAAA,QAAQ,GAAI,uBAAsBX,KAAK,CAACY,iBAAkB,EAA1D;AACH;;AACD,WAAOD,QAAP;AACH;;AAED,QAAMC,iBAAiB,GAAGf,WAAW,CAACa,oBAAD,EAAuBd,YAAvB,CAArC,CAhCmC,CAmCnC;AACA;AACA;AAEA;AACA;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA,oCAAoBa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlDuBd,Y;UAqBGD,W,EAWGA,W;;;KAhCNC,Y","sourcesContent":["import React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport './MessageBoard.css';\n\n\nexport default function MessageBoard() {\n    \n\n    function createMessage(state) {\n        let message = \"\";\n\n        if (state.invalidWordLength) {\n            message = \"Invalid Word Length\";\n        }\n\n        let lastGuess = state.history.pop();\n        console.log(\"lastGUess\" + lastGuess);\n        if (state.word === lastGuess) {\n            message = \"congrats\";\n        }\n\n       \n        return message;\n    } \n    \n    \n    const currentMessage = useSelector(createMessage, shallowEqual);\n\n    function getAttemptsRemaining(state) {\n        let attempts = \"\";\n\n        if (state.attemptsRemaining > 0) {\n            attempts = `Attempts Remaining: ${state.attemptsRemaining}`;\n        }\n        return attempts;\n    }\n\n    const attemptsRemaining = useSelector(getAttemptsRemaining, shallowEqual);\n\n\n    // function score(state) {\n    //     let lastGuess = state.history.pop();\n    //     if (state.word === lastGuess) {\n\n    //     }\n    // }\n\n\n    return(\n        <div className='text-container'> \n            <h2>Message Board: {currentMessage}</h2>\n            <h3>{attemptsRemaining}</h3>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}