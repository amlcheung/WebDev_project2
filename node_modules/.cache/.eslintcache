[{"/Users/ashleycheung/Desktop/WebDev_project2/src/index.js":"1","/Users/ashleycheung/Desktop/WebDev_project2/src/reducer/colorReducer.js":"2","/Users/ashleycheung/Desktop/WebDev_project2/src/reducer/WordGeneratorReducer.js":"3","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Medium.jsx":"4","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Hard.jsx":"5","/Users/ashleycheung/Desktop/WebDev_project2/src/component/App.jsx":"6","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Instructions.jsx":"7","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Easy.jsx":"8","/Users/ashleycheung/Desktop/WebDev_project2/src/component/NavBar.jsx":"9","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Square.jsx":"10","/Users/ashleycheung/Desktop/WebDev_project2/src/component/InputBox.jsx":"11","/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx":"12"},{"size":1416,"mtime":1649532812687,"results":"13","hashOfConfig":"14"},{"size":38,"mtime":1649532812687,"results":"15","hashOfConfig":"14"},{"size":3594,"mtime":1649538403443,"results":"16","hashOfConfig":"14"},{"size":2060,"mtime":1649534546341,"results":"17","hashOfConfig":"14"},{"size":1888,"mtime":1649532812685,"results":"18","hashOfConfig":"14"},{"size":201,"mtime":1649532812684,"results":"19","hashOfConfig":"14"},{"size":1759,"mtime":1649537820812,"results":"20","hashOfConfig":"14"},{"size":5865,"mtime":1649539452653,"results":"21","hashOfConfig":"14"},{"size":733,"mtime":1649539585083,"results":"22","hashOfConfig":"14"},{"size":543,"mtime":1649532812686,"results":"23","hashOfConfig":"14"},{"size":1254,"mtime":1649535765359,"results":"24","hashOfConfig":"14"},{"size":1349,"mtime":1649535021395,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4n31rf",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/ashleycheung/Desktop/WebDev_project2/src/index.js",["68"],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/reducer/colorReducer.js",[],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/reducer/WordGeneratorReducer.js",["69","70"],[],"// reducer to randomly select word?\n\nconst initState = {\n    word: \"\",\n    history: [],\n    invalidWordLength: false,\n    attemptsRemaining: -1,\n}\n\nconst max = 10;\nconst min = 0;\n\nexport function WordGeneratorReducer(state = initState, action) {\n    //debugger\n    if (action.type === 'EASY') {\n        const easyWords = [\"Cable\", \"Faces\", \"Label\", \"Nacho\", \"Wacky\", \n                       \"Yacht\", \"Adult\", \"Grass\", \"Water\", \"Tower\"];\n\n        let randomIndexEasy = Math.floor(Math.random() * (max - min) + min);\n\n        console.log(\"random selected word: \" + easyWords[randomIndexEasy]);\n\n        return {\n            ...state, \n            word: easyWords[randomIndexEasy].toUpperCase(),\n            history: [],\n            attemptsRemaining: action.attempts,\n\n\n        }\n    }\n\n    if (action.type === 'MEDIUM') {\n        const medWords = [\"Acting\", \"Amount\", \"Became\", \"Belief\", \"Breath\", \n                          \"Design\", \"Doctor\", \"Enable\", \"Fabric\", \"Golden\"];\n    \n\n        let randomIndexMedium = Math.floor(Math.random() * (max - min) + min);\n\n        console.log(medWords[randomIndexMedium]);\n        return {\n            ...state,\n            word: medWords[randomIndexMedium].toUpperCase(),\n            history: [],\n            attemptsRemaining: action.attempts,\n        }\n    }\n\n\n    if (action.type === 'HARD') {\n        const hardWords = [\"Fuzzier\", \"Drizzle\", \"Quibble\", \"Oxidize\", \"Tickbox\", \n                           \"Complex\", \"Squeeze\", \"Jumping\", \"Quickley\", \"Eagerly\"];\n\n        let randomIndexHard = Math.floor(Math.random() * (max - min) + min);\n\n        console.log(hardWords[randomIndexHard]);\n\n        return {\n            ...state, \n            word: hardWords[randomIndexHard].toUpperCase(),\n            history: [],\n            attemptsRemaining: action.attempts,\n        }\n\n    }\n\n\n    if (action.type === \"EVALUATE_WORD\") {\n        console.log(\"eval function called\");\n        let newWord = action.value.toString();\n        // console.log(\"input word length: \" + newWord.length)\n        // Easy\n\n        if (state.word.length === 5 && newWord.length === 5){\n            // console.log(\"history array: \" + state.history);\n            // console.log(\"valid\");\n\n\n            return {\n                ...state,\n                history: [...state.history, action.value],\n                invalidWordLength: false,\n                attemptsRemaining: state.attemptsRemaining - 1,\n            }\n        }\n        // Medium\n        else if (state.word.length === 6 && newWord.length === 6){\n            console.log(state.history);\n            return {\n                ...state,\n                history: [...state.history, action.value],\n                invalidWordLength: false,\n                attemptsRemaining: state.attemptsRemaining - 1,\n            }\n        }\n        // Hard\n        else if (state.word.length === 7 && newWord.length === 7){\n            console.log(state.history);\n            return {\n                ...state,\n                history: [...state.history, action.value],\n                invalidWordLength: false,\n                attemptsRemaining: state.attemptsRemaining - 1,\n            }\n        }\n        // Not valid\n        else {\n            // Invalid! The word must be of length {state.word.length}.\n            return {\n                ...state,\n                invalidWordLength: true,\n                // attemptsRemaining: attemptsRemaining,\n            }\n        }\n    } else {\n        return {\n            ... state,\n            attemptsRemaining: state.attemptsRemaining,\n        }\n    }\n        \n    \n    return state;\n}",["71","72"],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/Medium.jsx",["73","74","75","76"],[],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './Medium.css';\nimport Square from './Square';\nimport InputBox from'./InputBox';\n\nexport default function Medium(props) {\n\n    // const dispatch = useDispatch();\n\n    // function getMediumWord() {\n    //     const action = {\n    //         type: 'MEDIUM'\n    //     }\n\n    //     dispatch(action);\n    // }\n\n   \n    return (<div></div>);\n    \n\n    //     <div>\n    //         <h1>Difficulty: Medium</h1>\n    //         <button onClick={getMediumWord}>Start Game</button>\n    //         <InputBox></InputBox>\n    //         <div className=\"board-container\">\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n    //             <Square></Square>\n\n\n    //         </div>\n    // </div>\n            \n\n      \n        \n\n      \n\n\n}",["77","78"],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/Hard.jsx",["79"],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/App.jsx",[],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/Instructions.jsx",[],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/Easy.jsx",["80","81","82","83","84","85","86"],[],"import React, { useState } from 'react';\nimport { shallowEqual, useDispatch } from 'react-redux';\nimport './Easy.css';\nimport Square from './Square';\nimport InputBox from'./InputBox';\nimport { useSelector } from 'react-redux';\nimport MessageBoard from './MessageBoard';\n\nexport default function Easy(props) {\n\n    const dispatch = useDispatch();\n\n    function getWord() {\n        const action = {\n            type: 'EASY',\n            attempts: 7,\n            // type: setDifficulty\n            // level: 'easy'\n        }\n        dispatch(action);\n    }\n\n    function getWordFromState(state) {\n        return state.word;\n    }\n\n    // Get Guess Array\n    function getWordFromHistory(state) {\n            return state.history;\n    }\n\n    //const currArray = getWordFromHistory();\n    //const [eachWord, setWord] = useState('');\n\n    // Function to check is the square should be yellow\n    function CheckYellow(goalWord, guessWord, letterIndexInGuess){\n        let countLetterInGuessWord = 0;\n        let countCorrectLetterInGuessWord = 0;\n        let indexesOfLetterInGuessWord = [];\n        let indexesOfLetterInGoalWord = [];\n        let countLetterInGoalWord = 0;\n        for (let index = 0; index < 5; index++){\n            if (guessWord[index] == guessWord[letterIndexInGuess]){\n                countLetterInGuessWord++;\n                indexesOfLetterInGuessWord.push(index);\n            }\n            if (goalWord[index] == guessWord[letterIndexInGuess]){\n                countLetterInGoalWord++;\n                indexesOfLetterInGoalWord.push(index);\n            }\n        }\n        // Count number of 'green' sqaures of given letter in given word\n        for (let correct = 0; correct < indexesOfLetterInGoalWord.length; correct++){\n            for (let lettGuess = 0; lettGuess < indexesOfLetterInGuessWord.length; lettGuess++){\n                if (indexesOfLetterInGoalWord[correct] == indexesOfLetterInGuessWord[lettGuess]){\n                    countCorrectLetterInGuessWord++;\n                }\n            }\n        }\n    \n       if (countLetterInGuessWord === countLetterInGoalWord){\n            return true;\n        } else {\n            // If the number of 'green' of that letter in the guess is == to the number of that letter -> return false\n            for (let yellowBlock = 0; yellowBlock < (countLetterInGoalWord - countCorrectLetterInGuessWord); yellowBlock++){\n                if (letterIndexInGuess == indexesOfLetterInGuessWord[yellowBlock ]){\n                    return true;\n                }\n            }\n        }\n        // If letter from guess word isn't in goal word OR the number of 'green' of that letter in the guess is == to the number of that letter -> return false\n        return false;\n    }\n    const randomWord = useSelector(getWordFromState, shallowEqual);\n    const guessArray= useSelector(getWordFromHistory, shallowEqual);\n    const wordComponents = [];\n    // If the number of guesses is less than 7, add the guess\n    if (guessArray.length <= 7){\n        for (let i = 0; i < guessArray.length; i++){\n            const list = []\n            for (let j = 0; j < guessArray[i].length; j++){\n                if (guessArray[i].toUpperCase().charAt(j) == randomWord.charAt(j)){\n                    const component = <Square color='green' letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                } else if (CheckYellow(randomWord, guessArray[i].toUpperCase(), j)){\n                    const component = <Square color='yellow' letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                } else {\n                    const component = <Square color='white'letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                }\n            }\n            wordComponents.push(list);\n        }\n    // User tries to guess more than 7 times, nothing happens\n    } else {\n        for (let i = 0; i < 7; i++){\n            const list = []\n            for (let j = 0; j < guessArray[i].length; j++){\n                if (guessArray[i].toUpperCase().charAt(j) == randomWord.charAt(j)){\n                    const component = <Square color='green' letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                } else if (CheckYellow(randomWord, guessArray[i].toUpperCase(), j)){\n                    const component = <Square color='yellow' letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                } else {\n                    const component = <Square color='white'letter={guessArray[i].toUpperCase().charAt(j)} ></Square>\n                    list.push(component);\n                }\n            }\n            wordComponents.push(list);\n        }\n    }\n\n    for (let z = 0; z < 7 - guessArray.length; z++){\n        const blankList = []\n            for (let j = 0; j < 5; j++){\n                const component = <Square color=\"white\"></Square>\n                blankList.push(component);\n            }\n            wordComponents.push(blankList);\n    } \n\n    return(\n        <div>\n            <h1>Difficulty: Easy, randomWord: {randomWord}</h1>\n            <div className=\"game-contents-container\">\n                <button className=\"button-style\" onClick={getWord}>Start Game</button>\n                <MessageBoard></MessageBoard>\n                <InputBox></InputBox>\n                <div id=\"board-container\">\n                    {wordComponents}\n                </div>\n            {/* </div>\n            <button className=\"button-style\" onClick={getWord}>Start Game</button>\n            <MessageBoard></MessageBoard>\n            <InputBox></InputBox>\n            <div id=\"board-container\">\n                {wordComponents} */}\n            </div>\n    </div>\n    );\n}","/Users/ashleycheung/Desktop/WebDev_project2/src/component/NavBar.jsx",["87","88"],[],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport './NavBar.css';\nimport App from './App';\n\nfunction NavBar() {\n\n    return (\n        <div className=\"nav-bar-container font-style\">\n            <Link className=\"button-format\" to={\"/\"}> Home </Link>\n            <Link className=\"button-format\" to={\"/instructions\"}>Instructions</Link>\n            <div className=\"button-format font-style-wordle\">Wordle</div>\n            <Link className=\"button-format\" to={\"/easy\"}>Easy</Link>\n            <Link className=\"button-format\" to={\"/medium\"}>Medium</Link>\n            <Link className=\"button-format\" to={\"/hard\"}>Hard</Link>\n        </div>\n    );\n}\n\nexport default NavBar;","/Users/ashleycheung/Desktop/WebDev_project2/src/component/Square.jsx",["89","90","91","92"],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/InputBox.jsx",["93","94","95","96"],[],"/Users/ashleycheung/Desktop/WebDev_project2/src/component/MessageBoard.jsx",[],[],{"ruleId":"97","severity":1,"message":"98","line":12,"column":10,"nodeType":"99","messageId":"100","endLine":12,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":117,"column":16,"nodeType":"103","messageId":"104","endLine":117,"endColumn":17,"fix":"105"},{"ruleId":"106","severity":1,"message":"107","line":123,"column":5,"nodeType":"108","messageId":"109","endLine":123,"endColumn":18},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"97","severity":1,"message":"114","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"115","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"97","severity":1,"message":"116","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":14},{"ruleId":"97","severity":1,"message":"117","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":16},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"97","severity":1,"message":"114","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"114","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":43,"column":34,"nodeType":"122","messageId":"123","endLine":43,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":47,"column":33,"nodeType":"122","messageId":"123","endLine":47,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":55,"column":56,"nodeType":"122","messageId":"123","endLine":55,"endColumn":58},{"ruleId":"120","severity":1,"message":"121","line":66,"column":40,"nodeType":"122","messageId":"123","endLine":66,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":82,"column":59,"nodeType":"122","messageId":"123","endLine":82,"endColumn":61},{"ruleId":"120","severity":1,"message":"121","line":100,"column":59,"nodeType":"122","messageId":"123","endLine":100,"endColumn":61},{"ruleId":"97","severity":1,"message":"115","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"124","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":11},{"ruleId":"97","severity":1,"message":"114","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":9,"column":26,"nodeType":"122","messageId":"127","endLine":9,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":11,"column":26,"nodeType":"122","messageId":"127","endLine":11,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":13,"column":26,"nodeType":"122","messageId":"127","endLine":13,"endColumn":27},{"ruleId":"97","severity":1,"message":"128","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"97","severity":1,"message":"129","line":2,"column":23,"nodeType":"99","messageId":"100","endLine":2,"endColumn":35},{"ruleId":"97","severity":1,"message":"130","line":8,"column":12,"nodeType":"99","messageId":"100","endLine":8,"endColumn":17},{"ruleId":"97","severity":1,"message":"131","line":8,"column":19,"nodeType":"99","messageId":"100","endLine":8,"endColumn":30},"no-unused-vars","'colorReducer' is defined but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"132","text":"133"},"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'useState' is defined but never used.","'useDispatch' is defined but never used.","'Square' is defined but never used.","'InputBox' is defined but never used.",["134"],["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'App' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useSelector' is defined but never used.","'shallowEqual' is defined but never used.","'input' is assigned a value but never used.","'setInputBox' is assigned a value but never used.",[3481,3482],"","no-global-assign","no-unsafe-negation"]